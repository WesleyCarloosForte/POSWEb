@page "/Usuario/edit/{Id:int}"
@inject HttpClient http
@inject IJSRuntime runtime;
@inject SweetAlertService swl;

<h3>Editar Usuario</h3>
<UsuarioForm Id="Id" Save="@Save" Usuario="@Usuario">

</UsuarioForm>

@code {
    [Parameter]
    public int Id { get; set; }

    UsuarioCreateDTO Usuario = new UsuarioCreateDTO();

    async Task Save()
    {
        var result = await http.PutAsJsonAsync($"{SharedProject.Api.url}/Usuario/{Id}", Usuario);
        if (result.StatusCode == System.Net.HttpStatusCode.NoContent)
        {
          await  new Utils.Functions(runtime, swl).ShowSaved();    

        }
        else await new Utils.Functions(runtime, swl).ShowError("No fue posible realizar la operacion","Error");



    }

    protected async override Task OnParametersSetAsync()
    {
        // Llama al método base para realizar las operaciones por defecto
        await base.OnParametersSetAsync();

        Usuario = await http.GetFromJsonAsync<UsuarioCreateDTO>($"{SharedProject.Api.url}/Usuario/edit/{Id}");


    }
}
