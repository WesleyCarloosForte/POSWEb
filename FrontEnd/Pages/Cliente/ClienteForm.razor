@page "/Cliente/form"
@using SharedProject.Models
@using System.Collections.Generic
@inject HttpClient http
@inject NavigationManager uriHelper

@if ( documentos != null)
{

    <EditForm Model="@Cliente" OnValidSubmit="@SaveForm">
 
        <div class="form-field">
            <label>Nombre</label>
            <div>
                <InputText class="form-control" @bind-Value="@Cliente.Nombre"></InputText>
                <ValidationMessage For="@(() => Cliente.Nombre)" />
            </div>
        </div>

        <div class="form-field">
            <label>Dirección</label>
            <div>
                <InputText class="form-control" @bind-Value="@Cliente.Direccion"></InputText>
                <ValidationMessage For="@(() => Cliente.Direccion)" />
            </div>
        </div>

        <div class="form-field">
            <label>Teléfono</label>
            <div>
                <InputText class="form-control" @bind-Value="@Cliente.Telefono"></InputText>
                <ValidationMessage For="@(() => Cliente.Telefono)" />
            </div>
        </div>

        <div class="form-field">
            <label>Email</label>
            <div>
                <InputText class="form-control" @bind-Value="@Cliente.Email"></InputText>
                <ValidationMessage For="@(() => Cliente.Email)" />
            </div>
        </div>

        <div class="form-field">
            <label>Número de Documento</label>
            <div>
                <InputText class="form-control" @bind-Value="@Cliente.NumeroDocumento"></InputText>
                <ValidationMessage For="@(() => Cliente.NumeroDocumento)" />
            </div>
        </div>

        <div class="form-field">
            <label>Tipo de Documento</label>
            <div>
                <select class="form-control" @bind="@Cliente.DocumentoId">
                    @foreach (var documento in documentos)
                    {
                        <option value="@documento.Id">@documento.Descripcion</option>
                    }
                </select>
                <ValidationMessage For="@(() => Cliente.DocumentoId)" />
            </div>
        </div>

        <button type="submit" class="btn btn-primary my-2">Guardar</button>

        <DataAnnotationsValidator />

    </EditForm>
}
else
{
    <p>Cargando datos...</p>
}
<FrontEnd.Components.Buttons.ButtonBack Goto="Cliente/List"></FrontEnd.Components.Buttons.ButtonBack>

@code {
    [Parameter]
    public EventCallback Save { get; set; }
    [Parameter]
    public int? Id { get; set; } = 0;
    [Parameter]
    public ClienteCreateDTO Cliente { get; set; } = new ClienteCreateDTO();
    List<DocumentoViewDTO> documentos;

    protected override async Task OnInitializedAsync()
    {


        documentos = new List<DocumentoViewDTO>();
        documentos.Add(new DocumentoViewDTO { CantidadDigitos = 0, Descripcion = "---------", Estado = true, Id = 0 });

        var resultDoc = await http.GetFromJsonAsync<List<DocumentoViewDTO>>($"{SharedProject.Api.url}/Documento");
        documentos.AddRange(resultDoc);
    }

    private async Task SaveForm()
    {
        await Save.InvokeAsync();
        uriHelper.NavigateTo("Cliente/list");
    }
}
