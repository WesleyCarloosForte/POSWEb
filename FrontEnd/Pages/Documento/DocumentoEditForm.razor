@page "/Documento/edit/{Id:int}"
@inject HttpClient http
@inject IJSRuntime runtime;
@inject SweetAlertService swl;

<h3>Editar Documento</h3>
<DocumentoForm Id="Id" Save="@Save" Documento="@Documento">

</DocumentoForm>

@code {
    [Parameter]
    public int Id { get; set; }

    DocumentoViewDTO Documento = new DocumentoViewDTO();

    async Task Save()
    {
        var result =await http.PutAsJsonAsync($"{SharedProject.Api.url}/Documento/{Id}", Documento);
        if (result.StatusCode == System.Net.HttpStatusCode.NoContent)
        {
          await  new Utils.Functions(runtime, swl).ShowSaved();    

        }
        else await new Utils.Functions(runtime, swl).ShowError("No fue posible realizar la operacion","Error");



    }

    protected async override Task OnParametersSetAsync()
    {
        // Llama al método base para realizar las operaciones por defecto
        await base.OnParametersSetAsync();

        Documento = await http.GetFromJsonAsync<DocumentoViewDTO>($"{SharedProject.Api.url}/Documento/{Id}");


    }
}
