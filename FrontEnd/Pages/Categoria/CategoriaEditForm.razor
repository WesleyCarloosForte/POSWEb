@page "/categoria/edit/{Id:int}"
@inject HttpClient http
@inject IJSRuntime runtime;
@inject SweetAlertService swl;

<h3>Editar Categoria</h3>
<CategoriaForm Id="Id" Save="@Save" Categoria="@Categoria">

</CategoriaForm>

@code {
    [Parameter]
    public int Id { get; set; }

    CategoriaCreateDTO Categoria = new CategoriaCreateDTO();

    async Task Save()
    {
        var result =await http.PutAsJsonAsync($"{SharedProject.Api.url}/Categoria/{Id}", Categoria);
        if (result.StatusCode == System.Net.HttpStatusCode.NoContent)
        {
          await  new Utils.Functions(runtime, swl).ShowSaved();    

        }
        else await new Utils.Functions(runtime, swl).ShowError("No fue posible realizar la operacion","Error");



    }

    protected async override Task OnParametersSetAsync()
    {
        // Llama al método base para realizar las operaciones por defecto
        await base.OnParametersSetAsync();

        Categoria = await http.GetFromJsonAsync<CategoriaCreateDTO>($"{SharedProject.Api.url}/categoria/{Id}");


    }
}
